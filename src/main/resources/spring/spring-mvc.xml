<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation=" 
                http://www.springframework.org/schema/beans 
                http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
                http://www.springframework.org/schema/context 
                http://www.springframework.org/schema/context/spring-context-3.1.xsd 
                http://www.springframework.org/schema/mvc 
                http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
                http://www.springframework.org/schema/aop 
     			http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
	
	<!-- spring mvc 前后端集成相关配置 -->
	
	<mvc:annotation-driven />

	<!-- 默认访问跳转到登录页面 -->
	<mvc:view-controller path="/" view-name="forward:/login.shtml" />
	<!-- 仅仅扫描Controller 注解 -->
	<context:component-scan base-package="com.scinan.controller" >
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<context:component-scan base-package="com.scinan.operationlogaop,com.scinan.utils" />
	<!-- 启动对@AspectJ注解的支持 -->
	<!--通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Controller-->  
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
			
	<!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd -->
	<mvc:resources mapping="/static/**" location="/static/"/>

    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJackson2HttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>text/json;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 采用SpringMVC自带的JSON转换工具，支持@ResponseBody注解 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJackson2HttpMessageConverter" />    <!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>
	
	<!-- 国际化配置 -->	
	<bean id="messageSource"
		 class="org.springframework.context.support.ResourceBundleMessageSource" >
		 <property name="basename" value="i18n.mess"	/>
		 <property name="useCodeAsDefaultMessage" value="true"/>
		 <property name="defaultEncoding" value="UTF-8"/>
	</bean>
	
<!-- 	<bean id="localeResolver"  class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />   -->

		<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />
        <!-- 国际化注入配置 -->	
        <bean id="MessageSourceUtil" class="com.scinan.utils.MessageSourceUtil"/>  
	
		<!-- 拦截器配置 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 拦截请求 -->
			<mvc:mapping path="/**"/>
			<bean class="com.scinan.intercepter.LoginInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
</beans>