<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.scinan.iot.s1000.dao.UserThirdPartyMapper" >
  
   <sql id="sql_columns">
   		id,user_id,third_party_type,third_party_openid,create_time,third_party_nickname,third_party_avatar,user_name,user_email,user_phone,province_name,detail_address
   </sql>
   
   <sql id="sql_where">
	    <if test="conds!=null">
	        <trim prefix="WHERE" prefixOverrides="AND|OR">
	            <foreach collection="conds.conds" index="index" item="cond">
	                ${cond.linkType}
	                <if test="cond.condType == 'EQUAL'">${cond.s_param} = #{cond.value}</if>
	                <if test="cond.condType == 'GREATEQUAL'">${cond.s_param} &gt;= #{cond.value}</if>
	                <if test="cond.condType == 'GREATTHAN'">${cond.s_param} &gt; #{cond.value}</if>
	                <if test="cond.condType == 'LESSEQUAL'">${cond.s_param} &lt;= #{cond.value}</if>
	                <if test="cond.condType == 'LESSTHAN'">${cond.s_param} &lt; #{cond.value}</if>
	                <if test="cond.condType == 'BETWEEN'">${cond.s_param} BETWEEN #{cond.startValue} AND #{cond.endValue}</if>
	                <if test="cond.condType == 'ISNULL'">${cond.s_param} IS NULL</if>
	                <if test="cond.condType == 'NOTNULL'">${cond.s_param} IS NOT NULL</if>
	                <if test="cond.condType == 'LIKE'">${cond.s_param} LIKE #{cond.value}</if>
	                <if test="cond.condType == 'IN'">${cond.s_param} IN 
	                    <foreach item="item" index="index" collection="cond.value" open="(" separator="," close=")">
	                        #{item}
	                    </foreach>                                       
	                </if>
	            </foreach>
	        </trim>
	    </if>
	</sql>
	
	<select id="fetchById" resultType="com.scinan.iot.s1000.dao.domain.UserThirdPartyBean">
	   SELECT <include refid="sql_columns"/> FROM t_user_third_party where id = #{id}
	</select>
	
	<select id="getLocationCount" parameterType="java.lang.Integer" resultType="com.scinan.iot.s1000.dao.domain.UserThirdPartyBean">
	   SELECT IFNULL(province_name, '其他') third_party_openid, COUNT(province_name) third_party_type FROM t_user_third_party
		WHERE app_key='500022' GROUP BY province_name;
	</select>

	<select id="fetchByPage" parameterType="java.util.Map" resultType="com.scinan.iot.s1000.dao.domain.UserThirdPartyBean">
     <choose>
       <when test="limit>0">
			SELECT <include refid="sql_columns" /> FROM t_user_third_party t
			<include refid="sql_where" />
			ORDER BY id DESC
			limit #{offset},#{limit}  
       </when>
        <otherwise>
             SELECT <include refid="sql_columns" />  FROM t_user_third_party t 
             <include refid="sql_where" /> ORDER BY id DESC
        </otherwise>
      </choose>         
    </select>

	<select id="getUserInfoByPage" parameterType="java.util.Map" resultType="com.scinan.iot.s1000.dao.domain.UserThirdPartyBean">
		<choose>
			<when test="limit>0">
				SELECT <include refid="sql_columns" /> FROM t_user_third_party t
				<include refid="sql_where" />
				ORDER BY id DESC
				limit #{offset},#{limit}
			</when>
			<otherwise>
				SELECT <include refid="sql_columns" />  FROM t_user_third_party t
				<include refid="sql_where" /> ORDER BY id DESC
			</otherwise>
		</choose>
	</select>
    
	 <select id="count" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT COUNT(1)  FROM t_user_third_party t <include refid="sql_where" />
    </select>
    
    <select id="fetchByUserId" resultType="com.scinan.iot.s1000.dao.domain.UserThirdPartyBean">
	   SELECT <include refid="sql_columns"/> FROM t_user_third_party where user_id = #{user_id} limit 1
	</select>
    
</mapper>