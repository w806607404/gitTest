<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.scinan.iot.ddeddo.dao.AccountSoldMapper" >
	<!--  默认不使用缓存
    <cache type="org.mybatis.caches.redis.LoggingRedisCache"/>
    -->
   <sql id="sql_columns">
            id , 
           	device_id,
			user_id,
			receive_name,
			receive_contact,
			company_id,
			create_time,
			province_id,
			province_name,
			city_id,
			city_name,
			district_id,
			district_name,
			app_key,
			_join
    </sql>

  <sql id="sql_where">
        <if test="conds!=null">
            <trim prefix="WHERE" prefixOverrides="AND|OR">
                <foreach collection="conds.conds" index="index" item="cond">
                    ${cond.linkType}
                    <if test="cond.condType == 'EQUAL'">${cond.s_param} = #{cond.value}</if>
                    <if test="cond.condType == 'GREATEQUAL'">${cond.s_param} &gt;= #{cond.value}</if>
                    <if test="cond.condType == 'GREATTHAN'">${cond.s_param} &gt; #{cond.value}</if>
                    <if test="cond.condType == 'LESSEQUAL'">${cond.s_param} &lt;= #{cond.value}</if>
                    <if test="cond.condType == 'LESSTHAN'">${cond.s_param} &lt; #{cond.value}</if>
                    <if test="cond.condType == 'BETWEEN'">${cond.s_param} BETWEEN #{cond.startValue} AND #{cond.endValue}</if>
                    <if test="cond.condType == 'ISNULL'">${cond.s_param} IS NULL</if>
                    <if test="cond.condType == 'NOTNULL'">${cond.s_param} IS NOT NULL</if>
                    <if test="cond.condType == 'LIKE'">${cond.s_param} LIKE #{cond.value}</if>
                    <if test="cond.condType == 'IN'">${cond.s_param} IN 
                        <foreach item="item" index="index" collection="cond.value" open="(" separator="," close=")">
                            #{item}
                        </foreach>                                       
                    </if>
                </foreach>
            </trim>
        </if>
    </sql>
    <insert id="save" parameterType="com.scinan.iot.ddeddo.dao.domain.AccountSold" useGeneratedKeys="true" keyProperty="id">
        insert into t_account_sold
          (
             		device_id,
					user_id,
					receive_name,
					receive_contact,
					company_id,
					create_time,
					province_id,
					province_name,
					city_id,
					city_name,
					district_id,
					district_name,
					app_key,
					_join
          )
        values
          (
    	    	#{device_id},
	    	    #{user_id},
	    	    #{receive_name},
	    	    #{receive_contact},
	    	    #{company_id},
	    	   	#{create_time},
	    	   	#{province_id},
	    	    #{province_name},
	    	    #{city_id},
	    	    #{city_name},
	    	   	#{district_id},
	    	   	#{district_name},
	    	   	#{app_key},
	    	   	#{_join}
	          )
    </insert>

    <select id="fetchAccountSoldBeanList" parameterType="java.util.Map" resultType="com.scinan.iot.ddeddo.dao.domain.AccountSoldBean">
     <choose>
       <when test="limit>0">
			SELECT t.*,i.user_nickname user_nickname,i.user_name user_name,rt.name user_type
			FROM t_account_sold t 
			LEFT JOIN t_account_info i ON t.user_id=i.id
			LEFT JOIN t_role r ON i.role_id=r.id
			LEFT JOIN t_role_type rt ON r.role_type=rt.id
						
			<include refid="sql_where" />
			<if test="sort!=null">
				ORDER BY #{sort.param}  #{sort.type} 
			</if>
			limit #{offset},#{limit}  
       </when>
        <otherwise>
            SELECT t.*,i.user_nickname user_nickname,i.user_name user_name,rt.name user_type
			FROM t_account_sold t 
			LEFT JOIN t_account_info i ON t.user_id=i.id
			LEFT JOIN t_role r ON i.role_id=r.id
			LEFT JOIN t_role_type rt ON r.role_type=rt.id
			
			<include refid="sql_where" />
        </otherwise>
      </choose>         
    </select>

    <select id="fetchById" parameterType="java.lang.Long" resultType="com.scinan.iot.ddeddo.dao.domain.AccountSold">
        SELECT
        <include refid="sql_columns" />
        FROM t_account_sold t
        where
        t.id=#{id}
    </select>

    	<!-- 主键为Long类型，使用SQL -->
    <select id="fetchByIdLong" parameterType="java.lang.Long" resultType="com.scinan.iot.ddeddo.dao.domain.AccountSold">
        SELECT
        <include refid="sql_columns" />
        FROM t_account_sold t
        where
        t.id=#{id}
    </select>
    <delete id="deleteByPK" parameterType="java.lang.Long">
        delete from t_account_sold where id=#{id}
    </delete>

 	<select id="countPage" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT COUNT(1)  FROM t_account_sold t <include refid="sql_where" />
    </select>
    
    <select id="count" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT COUNT(1)  FROM t_account_sold t where user_id = #{user_id}
    </select>
    <delete id="delete" parameterType="java.lang.String">
        delete from t_account_sold where id=#{id}
    </delete>
    
    <delete id="deleteByUser_id" parameterType="java.lang.Long">
        delete from t_account_sold where user_id=#{user_id}
    </delete> 

    <update id="update" parameterType="com.scinan.iot.ddeddo.dao.domain.AccountSoldBean">
		update t_account_sold a LEFT JOIN t_account_info b on a.user_id=b.id
	    <set >
	<if test="id != null" >
    	    		a.id = #{id},
		</if>
	<if test="device_id != null" >
    	    		a.device_id = #{device_id},
		</if>
	<if test="user_id != null" >
    	    		a.user_id = #{user_id},
		</if>
	<if test="receive_name != null" >
    	    		a.receive_name = #{receive_name},
		</if>
	<if test="receive_contact != null" >
    	    		a.receive_contact = #{receive_contact},
		</if>
	<if test="company_id != null" >
    	    		a.company_id = #{company_id},
		</if>
	<if test="create_time != null" >
    	    		a.create_time = now(),
		</if>
	<if test="province_id != null" >
    	    		a.province_id = #{province_id},
		</if>
	<if test="province_name != null" >
    	    		a.province_name = #{province_name},
		</if>
	<if test="city_id != null" >
    	    		a.city_id = #{city_id},
		</if>
	<if test="city_name != null" >
    	    		a.city_name = #{city_name},
		</if>
	<if test="district_id != null" >
    	    		a.district_id = #{district_id},
		</if>
	<if test="district_name != null" >
    	    		a.district_name = #{district_name},
		</if>
	<if test="user_nickname != null" >
    	    		b.user_nickname = #{user_nickname},
		</if>
	<if test="user_name != null" >
    	    		b.user_name = #{user_name},
		</if>
	<if test="user_type != null" >
    	    		b.user_type = #{user_type},
		</if>
	    </set>
	    where a.id=#{id}
    </update>

    
     <select id="countDay" parameterType="java.util.Map" resultType="java.lang.Integer">
         SELECT COUNT(1)  FROM t_account_sold t where (1=1)
        <if test="user_id != null">
        AND t.user_id = #{user_id} 
        </if>
        and DATE_FORMAT(t.create_time,'%Y-%m-%d') = DATE_FORMAT(SYSDATE(),'%Y-%m-%d') 
    </select>
    
    <select id="countMouth" parameterType="java.util.Map" resultType="java.lang.Integer">
         SELECT COUNT(1)  FROM t_account_sold t where (1=1)
        <if test="user_id != null">
        AND t.user_id = #{user_id} 
        </if>
        and DATE_FORMAT(t.create_time,'%Y-%m') = DATE_FORMAT(DATE_SUB(curdate(), INTERVAL 1 MONTH),'%Y-%m') 
    </select>
    
<select id="countJoinAll" parameterType="java.util.Map" resultType="java.lang.Integer">
         SELECT COUNT(1)  FROM t_account_sold t where (1=1)
        <if test="user_id != null">
        AND t.user_id = #{user_id} 
        </if>
        <if test="_join != null">
        AND t._join = #{_join} 
        </if>
    </select>
    
    <select id="countJoinDay" parameterType="java.util.Map" resultType="java.lang.Integer">
         SELECT COUNT(1)  FROM t_account_sold t where (1=1)
        <if test="user_id != null">
        AND t.user_id = #{user_id} 
        </if>
        <if test="_join != null">
        AND t._join = #{_join} 
        </if>
        and DATE_FORMAT(t.create_time,'%Y-%m-%d') = DATE_FORMAT(SYSDATE(),'%Y-%m-%d') 
    </select>

	<select id="fetchByDeviceIdOrUserId" parameterType="java.util.Map" resultType="com.scinan.iot.ddeddo.dao.domain.AccountSold">
        SELECT
        <include refid="sql_columns" />
        FROM t_account_sold t
        where (1=1)
        <if test="device_id != null">
        	and t.device_id=#{device_id}
        </if>
         <if test="user_id != null">
        	and t.user_id=#{user_id}
        </if>
        limit 1
    </select>
</mapper>