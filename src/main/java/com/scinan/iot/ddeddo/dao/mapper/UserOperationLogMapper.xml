<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.scinan.iot.ddeddo.dao.UserOperationLogMapper" >
    <!--  <cache type="org.mybatis.caches.redis.LoggingRedisCache"/>-->
	
	<sql id="sql_columns">
		t.id,t.user_id,t.title,t.request_uri,t.params,t.exception,t.remote_addr,t.cost_time,t.module,t.create_time
	</sql>
	
	<sql id="sql_where">
	    <if test="conds!=null">
	        <trim prefix="WHERE" prefixOverrides="AND|OR">
	            <foreach collection="conds.conds" index="index" item="cond">
	                ${cond.linkType}
	                <if test="cond.condType == 'EQUAL'">${cond.s_param} = #{cond.value}</if>
	                <if test="cond.condType == 'GREATEQUAL'">${cond.s_param} &gt;= #{cond.value}</if>
	                <if test="cond.condType == 'GREATTHAN'">${cond.s_param} &gt; #{cond.value}</if>
	                <if test="cond.condType == 'LESSEQUAL'">${cond.s_param} &lt;= #{cond.value}</if>
	                <if test="cond.condType == 'LESSTHAN'">${cond.s_param} &lt; #{cond.value}</if>
	                <if test="cond.condType == 'BETWEEN'">${cond.s_param} BETWEEN #{cond.startValue} AND #{cond.endValue}</if>
	                <if test="cond.condType == 'ISNULL'">${cond.s_param} IS NULL</if>
	                <if test="cond.condType == 'NOTNULL'">${cond.s_param} IS NOT NULL</if>
	                <if test="cond.condType == 'LIKE'">${cond.s_param} LIKE #{cond.value}</if>
	                <if test="cond.condType == 'IN'">${cond.s_param} IN 
	                    <foreach item="item" index="index" collection="cond.value" open="(" separator="," close=")">
	                        #{item}
	                    </foreach>                                       
	                </if>
	            </foreach>
	        </trim>
	    </if>
	</sql>
	
    <select id="fetchById" resultType="com.scinan.iot.ddeddo.dao.domain.UserOperationLogBean">
    	SELECT <include refid="sql_columns" />  FROM t_user_operation_log t where id = #{id}
    </select>
    
    <select id="fetchByPage" parameterType="java.util.Map" resultType="com.scinan.iot.ddeddo.dao.domain.UserOperationLogBean">
     <choose>
       <when test="limit>0">
			SELECT <include refid="sql_columns" />,t1.account_name FROM t_user_operation_log t 
			LEFT JOIN t_account_info t1 ON t.user_id = t1.id
			<include refid="sql_where" />
			ORDER BY t.create_time DESC
			limit #{offset},#{limit}  
       </when>
       <otherwise>
             SELECT <include refid="sql_columns" /> ,t1.account_name FROM t_user_operation_log t 
			LEFT JOIN t_account_info t1 ON t.user_id = t1.id
			<include refid="sql_where" />
			ORDER BY t.create_time DESC
       </otherwise>
      </choose>         
    </select>
    
    
	 <select id="count" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT COUNT(1)  FROM t_user_operation_log t LEFT JOIN t_account_info t1 ON t.user_id = t1.id<include refid="sql_where" />
    </select>  
    
    <insert id="save" parameterType="com.scinan.iot.ddeddo.dao.domain.UserOperationLogBean">
        insert into t_user_operation_log
	       (
	       id,
	       user_id,
	       title,
	       request_uri,
	       params,
	       exception,
	       remote_addr,
	       cost_time,
	       module,
	       create_time
	       )
	     values
	       (
			#{id},
			#{user_id},
			#{title},
			#{request_uri},
			#{params},
			#{exception},
			#{remote_addr},
			#{cost_time},
			#{module},
			now()
	       )
    </insert>    
      
</mapper>