<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.scinan.iot.ddeddo.dao.RoleMapper" >
    <!--  <cache type="org.mybatis.caches.redis.LoggingRedisCache"/>-->
	
	<sql id="sql_columns">
		id,name,parent_id,parent_role_path,role_type,create_time,update_time,company_id,parent_userid
	</sql>
	
	<sql id="sql_where">
	    <if test="conds!=null">
	        <trim prefix="WHERE" prefixOverrides="AND|OR">
	            <foreach collection="conds.conds" index="index" item="cond">
	                ${cond.linkType}
	                <if test="cond.condType == 'EQUAL'">${cond.s_param} = #{cond.value}</if>
	                <if test="cond.condType == 'GREATEQUAL'">${cond.s_param} &gt;= #{cond.value}</if>
	                <if test="cond.condType == 'GREATTHAN'">${cond.s_param} &gt; #{cond.value}</if>
	                <if test="cond.condType == 'LESSEQUAL'">${cond.s_param} &lt;= #{cond.value}</if>
	                <if test="cond.condType == 'LESSTHAN'">${cond.s_param} &lt; #{cond.value}</if>
	                <if test="cond.condType == 'BETWEEN'">${cond.s_param} BETWEEN #{cond.startValue} AND #{cond.endValue}</if>
	                <if test="cond.condType == 'ISNULL'">${cond.s_param} IS NULL</if>
	                <if test="cond.condType == 'NOTNULL'">${cond.s_param} IS NOT NULL</if>
	                <if test="cond.condType == 'LIKE'">${cond.s_param} LIKE #{cond.value}</if>
	                <if test="cond.condType == 'IN'">${cond.s_param} IN 
	                    <foreach item="item" index="index" collection="cond.value" open="(" separator="," close=")">
	                        #{item}
	                    </foreach>                                       
	                </if>
	            </foreach>
	        </trim>
	    </if>
	</sql>
    
    <insert id="save" parameterType="com.scinan.iot.ddeddo.dao.domain.Role">
        insert into t_role
        (
         name,parent_id,parent_role_path,role_type,create_time,update_time,company_id,parent_userid
        )
        values
        (
        #{name},
        #{parent_id},
        #{parent_role_path},
        #{role_type},
        #{create_time},
        #{update_time},
        #{company_id},
        #{parent_userid}
        )
    </insert>
    <select id="fetchByPage" parameterType="java.util.Map" resultType="com.scinan.iot.ddeddo.dao.domain.Role">
     <choose>
       <when test="limit>0">
			SELECT <include refid="sql_columns" /> FROM t_role t <include refid="sql_where" />
			<if test="sort!=null">
				ORDER BY ${sort.param}  ${sort.type} 
			</if>
			limit #{offset},#{limit}  
       </when>
        <otherwise>
             SELECT <include refid="sql_columns" />  FROM t_role t <include refid="sql_where" />
        </otherwise>
      </choose>         
    </select>
    
    
    <select id="fetchById" resultType="com.scinan.iot.ddeddo.dao.domain.Role">
         SELECT <include refid="sql_columns" />  FROM t_role t where id=#{id} limit 10
    </select>
    
	<select id="fetchByRoleListPage" parameterType="java.util.Map" resultType="com.scinan.iot.ddeddo.dao.domain.Role">
       SELECT id,name,parent_id,parent_role_path,(select name from t_role_type r where r.id=t.role_type)role_name,role_type,
        create_time,update_time FROM t_role  t  where (1=1) and id>1
        <if test="name != null" >
		   and name like '%${name}%'
		</if>
		<if test="parent_id != null" >
		   and parent_id = #{parent_id}
		</if>
		order by create_time desc limit #{offset},#{limit}        
    </select>
	<select id="countRoleNum" parameterType="java.util.Map" resultType="java.lang.Integer">
       SELECT COUNT(1) FROM t_role  t  where (1=1) and id>1
       <if test="name != null" >
		   and name like '%${name}%'
		</if>
		<if test="parent_id != null" >
		   and parent_id = #{parent_id}
		</if>
    </select>
    <select id="countRoleNameOfExits" parameterType="java.util.Map" resultType="java.lang.Integer">
       SELECT COUNT(1) FROM t_role  t  where (1=1) and id>1
       <if test="name != null" >
		   and name = #{name}
		</if>
		<if test="company_id != null" >
		   and company_id = #{company_id}
		</if>
		<if test="parent_id != null" >
		   and parent_id = #{parent_id}
		</if>
    </select>
    <update id="update" parameterType="com.scinan.iot.ddeddo.dao.domain.Role">
		update t_role
	    <set >
			<if test="name != null" >
		    	   name = #{name},
			</if>
			<if test="update_time != null" >
		    	  update_time = #{update_time},
			</if>
	    </set>
	    where id=#{id}
    </update>
    <select id="fetchRoleByList" parameterType="java.util.Map" resultType="com.scinan.iot.ddeddo.dao.domain.Role">
         SELECT id,name  FROM t_role t where (1=1) and id>1
         <if test="parent_id != null" >
		       and parent_id = #{parent_id}
		  </if>
		  <if test="role_type != null" >
		    	  role_type = #{role_type},
		 </if>
          order by create_time DESC
    </select>
    <select id="fetchRoleById" parameterType="java.util.Map" resultType="com.scinan.iot.ddeddo.dao.domain.Role">
         SELECT id,name,company_id,parent_userid,role_type  FROM t_role t where (1=1) and id>1
         <if test="parent_id != null" >
		       and parent_id = #{parent_id}
		  </if>
		  <if test="role_type != null" >
		    	and  role_type = #{role_type}
		 </if>
		 <if test="id != null" >
		    	and  id = #{id}
		 </if>
          limit 1
    </select>
    <delete id="deleteInfo" parameterType="java.util.Map">
        delete from t_role where id=#{id}
    </delete>
    
    
    <select id="fetchByRoleType" parameterType="java.util.Map" resultType="java.lang.Integer">
         SELECT id  FROM t_role t where t.role_type = #{role_type} and t.company_id = #{company_id}      
    </select>
</mapper>