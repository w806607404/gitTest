<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.scinan.iot.s6000.dao.DeviceTypeMapper" >

	
	<sql id="sql_columns">
		id,company_id,type,device_name,app_category_id,create_time,update_time
	</sql>
	
	 
	<sql id="sql_where">
	    <if test="conds!=null">
	        <trim prefix="WHERE" prefixOverrides="AND|OR">
	            <foreach collection="conds.conds" index="index" item="cond">
	                ${cond.linkType}
	                <if test="cond.condType == 'EQUAL'">${cond.s_param} = #{cond.value}</if>
	                <if test="cond.condType == 'GREATEQUAL'">${cond.s_param} &gt;= #{cond.value}</if>
	                <if test="cond.condType == 'GREATTHAN'">${cond.s_param} &gt; #{cond.value}</if>
	                <if test="cond.condType == 'LESSEQUAL'">${cond.s_param} &lt;= #{cond.value}</if>
	                <if test="cond.condType == 'LESSTHAN'">${cond.s_param} &lt; #{cond.value}</if>
	                <if test="cond.condType == 'BETWEEN'">${cond.s_param} BETWEEN #{cond.startValue} AND #{cond.endValue}</if>
	                <if test="cond.condType == 'ISNULL'">${cond.s_param} IS NULL</if>
	                <if test="cond.condType == 'NOTNULL'">${cond.s_param} IS NOT NULL</if>
	                <if test="cond.condType == 'LIKE'">${cond.s_param} LIKE #{cond.value}</if>
	                <if test="cond.condType == 'IN'">${cond.s_param} IN 
	                    <foreach item="item" index="index" collection="cond.value" open="(" separator="," close=")">
	                        #{item}
	                    </foreach>                                       
	                </if>
	            </foreach>
	        </trim>
	    </if>
	</sql>

    <select id="fetchById" resultType="com.scinan.iot.s6000.dao.domain.DeviceTypeBean">
	   SELECT <include refid="sql_columns"/> FROM t_device_type where id = #{id}
	</select>
	
	<select id="fetchByPage" parameterType="java.util.Map" resultType="com.scinan.iot.s6000.dao.domain.DeviceTypeBean">
     <choose>
       <when test="limit>0">
			SELECT <include refid="sql_columns" /> FROM t_device_type t
			<include refid="sql_where" />
			ORDER BY create_time DESC
			limit #{offset},#{limit}  
       </when>
        <otherwise>
             SELECT <include refid="sql_columns" /> FROM t_device_type t <include refid="sql_where" /> ORDER BY create_time DESC
        </otherwise>
      </choose>         
    </select>
    
	 <select id="count" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT COUNT(1)  FROM t_device_type t <include refid="sql_where" />
    </select>  
    <select id="getDeviceTypeAndComapnyId"  resultType="com.scinan.iot.s6000.dao.domain.DeviceTypeBean">
		select t1.id,t1.type,t1.device_name 
		from t_device_type t1 where 1=1 and t1.company_id = #{company_id}
	</select>
    <insert id="save" parameterType="com.scinan.iot.s6000.dao.domain.DeviceTypeBean" useGeneratedKeys="true" keyProperty="id">
        insert into t_device_type
          (
          <include refid="sql_columns" />
          )
       	values
          (
          #{id},
          #{company_id},
 		  #{type},
 		  #{device_name},
 		  #{app_category_id},
 		  now(),
 		  #{update_time}
          )
    </insert> 
	
	<update id="update" parameterType="com.scinan.iot.s6000.dao.domain.DeviceTypeBean">
		update t_device_type
	    <set> 
	      <if test="company_id != null and company_id != ''">
	        company_id = #{company_id},
	      </if>
	      <if test="type != null and type != ''">
	        type = #{type},
	      </if>
	      <if test="device_name != null and device_name != ''">
	        device_name = #{device_name},
	      </if>
	      <if test="app_category_id != null and app_category_id != ''">
	        app_category_id = #{app_category_id},
	      </if>
	       update_time = now()
	    </set>
	    where id = #{id}
	 </update>
	 
	<delete id="deleteIDs" parameterType="java.util.List">
   		delete from t_device_type where id in 
   		<foreach collection="list" item="item" index="index"
	        open="(" close=")" separator=",">
	        #{item}
      	</foreach>
    </delete>

	 <!-- 查询 -->
    <select id="fetchDeviceTypeByCompanyIdAndTypeId" resultType="com.scinan.iot.s6000.dao.domain.DeviceTypeBean">
      SELECT 
        device_name
	  FROM t_device_type 
	    where type = #{device_type_id} and company_id = #{company_id}
    </select> 
	 	
	<select id="fetchDeviceTypeByCompanyIdAndType" resultType="com.scinan.iot.s6000.dao.domain.DeviceTypeBean">
      SELECT 
        distinct t.device_name
	  FROM
	    t_device_type t
	    left join SNDB_6000000001.t_device_info t1
	    on t.company_id = t1.company_id and t.type = t1.type
	    where t1.id = #{device_id}
    </select>
    <select id="fetchDeviceTypeByDeviceId" resultType="com.scinan.iot.s6000.dao.domain.DeviceTypeBean">
      SELECT 
        distinct t.device_name
	  FROM
	    t_device_type t
	    left join sndb_6000000001.t_device_info t1
	    on t.company_id = t1.company_id and t.type = t1.type
	    left join sndb_s8000_log.t_command_up_log t2
	    on t1.id = t2.device_id
	    where t2.device_id = #{device_id}
    </select> 
    
    <select id="fetchByTypeAndCompanyId" parameterType="java.util.Map" resultType="com.scinan.iot.s6000.dao.domain.DeviceTypeBean">
        SELECT id,type,device_name
        FROM t_device_type t
        where
        t.company_id=#{company_id} and t.type=#{type}
    </select>
    
    <select id="fetchDeviceTypeFactoryNames" resultType="com.scinan.iot.s6000.dao.domain.DeviceTypeBean">
		select t2.code,t2.name as factory_name
		from t_device_type t1 
		left join SNDB_S1000.t_factory_manage t2 
		on t1.company_id = t2.id
		where t2.code is not null
		group by t2.name
	</select>
    
    <select id="fetchDeviceTypeOfList" resultType="com.scinan.iot.s6000.dao.domain.DeviceTypeBean">
		select t1.company_id,t1.type,t1.device_name 
		from t_device_type t1 order by id desc
	</select>
</mapper>