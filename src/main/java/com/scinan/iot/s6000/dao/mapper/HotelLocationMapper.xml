<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.scinan.iot.s6000.dao.HotelLocationMapper" >
    <sql id="sql_columns">
            user_id,
            company_id,
            name , 
            phone,
            address,
            province_id,
            city_id , 
            lng , 
            lat,
            create_time
    </sql>

  <sql id="sql_where">
        <if test="conds!=null">
            <trim prefix="WHERE" prefixOverrides="AND|OR">
                <foreach collection="conds.conds" index="index" item="cond">
                    ${cond.linkType}
                    <if test="cond.condType == 'EQUAL'">${cond.s_param} = #{cond.value}</if>
                    <if test="cond.condType == 'GREATEQUAL'">${cond.s_param} &gt;= #{cond.value}</if>
                    <if test="cond.condType == 'GREATTHAN'">${cond.s_param} &gt; #{cond.value}</if>
                    <if test="cond.condType == 'LESSEQUAL'">${cond.s_param} &lt;= #{cond.value}</if>
                    <if test="cond.condType == 'LESSTHAN'">${cond.s_param} &lt; #{cond.value}</if>
                    <if test="cond.condType == 'BETWEEN'">${cond.s_param} BETWEEN #{cond.startValue} AND #{cond.endValue}</if>
                    <if test="cond.condType == 'ISNULL'">${cond.s_param} IS NULL</if>
                    <if test="cond.condType == 'NOTNULL'">${cond.s_param} IS NOT NULL</if>
                    <if test="cond.condType == 'LIKE'">${cond.s_param} LIKE #{cond.value}</if>
                    <if test="cond.condType == 'IN'">${cond.s_param} IN 
                        <foreach item="item" index="index" collection="cond.value" open="(" separator="," close=")">
                            #{item}
                        </foreach>                                       
                    </if>
                </foreach>
            </trim>
        </if>
    </sql>
    <insert id="save" parameterType="com.scinan.iot.s6000.dao.domain.HotelLocationBean">
        insert into t_hotel_location
          (
            user_id,
            company_id,
            name , 
            phone,
            address,
            province_id,
            city_id , 
            lng , 
            lat,
            create_time
          )
        values
          (     #{user_id},
                #{company_id},
    	    	#{name},
    	    	#{phone},
    	    	#{address},
    	    	#{province_id},
    	    	#{city_id},
    	    	#{lng},
    	    	#{lat},
    	    	#{create_time}
	          )
    </insert>

    <select id="fetchByPage" parameterType="java.util.Map" resultType="com.scinan.iot.s6000.dao.domain.HotelLocationBean">
     <choose>
       <when test="limit>0">
			SELECT <include refid="sql_columns" /> FROM t_hotel_location t <include refid="sql_where" />
			<if test="sort!=null">
				ORDER BY ${sort.param}  ${sort.type} 
			</if>
			limit #{offset},#{limit}  
       </when>
        <otherwise>
             SELECT <include refid="sql_columns" /> FROM t_hotel_location t <include refid="sql_where" />
        </otherwise>
      </choose>         
    </select>
    <select id="fetchById" parameterType="java.lang.Long" resultType="com.scinan.iot.s6000.dao.domain.HotelLocationBean">
        SELECT <include refid="sql_columns"/>  FROM t_hotel_location t  where user_id=#{user_id}
    </select>
    <select id="count" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT COUNT(1)  FROM t_hotel_location t <include refid="sql_where" />
    </select>
    <delete id="delete" parameterType="java.lang.Integer">
        delete from t_hotel_location where user_id=#{user_id}
    </delete>

    <update id="update" parameterType="com.scinan.iot.s6000.dao.domain.HotelLocationBean">
		update t_hotel_location
	    <set >
        	<if test="name != null" >
    	    		name = #{name},
		    </if>
		    <if test="phone != null" >
    	    		phone = #{phone},
		    </if>
		    <if test="address != null" >
    	    		address = #{address},
		    </if>
        	<if test="province_id != null" >
    	    		province_id = #{province_id},
		    </if>
        	<if test="city_id != null" >
    	    		city_id = #{city_id},
		    </if>
        	<if test="lng != null" >
    	    		lng = #{lng},
		    </if>
		    <if test="lat != null" >
    	    		lat = #{lat},
		    </if>
		    <if test="create_time != null" >
    	    		create_time = #{create_time},
		    </if> 
   	    </set>
	    where user_id=#{user_id}
    </update>
    
    <delete id="deleteIds" parameterType="java.util.List">
   		delete from t_hotel_location where user_id in 
   		<foreach collection="list" item="item" index="index"
	        open="(" close=")" separator=",">
	        #{item}
      	</foreach>
    </delete>

</mapper>