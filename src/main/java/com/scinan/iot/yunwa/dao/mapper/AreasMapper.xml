<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.scinan.iot.yunwa.dao.AreasMapper" >
<!--     <cache type="org.mybatis.caches.redis.LoggingRedisCache"/> -->
    <sql id="sql_columns">

            id , 
            area_name , 
            parent_id , 
            short_name , 
            lng , 
            lat , 
            level , 
            position , 
            sort 
    </sql>

  <sql id="sql_where">
        <if test="conds!=null">
            <trim prefix="WHERE" prefixOverrides="AND|OR">
                <foreach collection="conds.conds" index="index" item="cond">
                    ${cond.linkType}
                    <if test="cond.condType == 'EQUAL'">${cond.s_param} = #{cond.value}</if>
                    <if test="cond.condType == 'GREATEQUAL'">${cond.s_param} &gt;= #{cond.value}</if>
                    <if test="cond.condType == 'GREATTHAN'">${cond.s_param} &gt; #{cond.value}</if>
                    <if test="cond.condType == 'LESSEQUAL'">${cond.s_param} &lt;= #{cond.value}</if>
                    <if test="cond.condType == 'LESSTHAN'">${cond.s_param} &lt; #{cond.value}</if>
                    <if test="cond.condType == 'BETWEEN'">${cond.s_param} BETWEEN #{cond.startValue} AND #{cond.endValue}</if>
                    <if test="cond.condType == 'ISNULL'">${cond.s_param} IS NULL</if>
                    <if test="cond.condType == 'NOTNULL'">${cond.s_param} IS NOT NULL</if>
                    <if test="cond.condType == 'LIKE'">${cond.s_param} LIKE #{cond.value}</if>
                    <if test="cond.condType == 'IN'">${cond.s_param} IN 
                        <foreach item="item" index="index" collection="cond.value" open="(" separator="," close=")">
                            #{item}
                        </foreach>                                       
                    </if>
                </foreach>
            </trim>
        </if>
    </sql>
    <insert id="save" parameterType="com.scinan.iot.yunwa.dao.domain.Areas" useGeneratedKeys="true" keyProperty="id">
        insert into t_areas
          (
          <include refid="sql_columns" />
          )
        values
          (
    	    	#{id},
	    	    	#{area_name},
	    	    	#{parent_id},
	    	    	#{short_name},
	    	    	#{lng},
	    	    	#{lat},
	    	    	#{level},
	    	    	#{position},
	    	    	#{sort}
	          )
    </insert>

    <select id="fetchByPage" parameterType="java.util.Map" resultType="com.scinan.iot.yunwa.dao.domain.Areas">
     <choose>
       <when test="limit>0">
			SELECT <include refid="sql_columns" /> FROM t_areas t <include refid="sql_where" />
			<if test="sort!=null">
				ORDER BY ${sort.param}  ${sort.type} 
			</if>
			limit #{offset},#{limit}  
       </when>
        <otherwise>
             SELECT <include refid="sql_columns" /> FROM t_areas t <include refid="sql_where" />
        </otherwise>
      </choose>         
    </select>
    
    <select id="fetchSearchAreas" parameterType="java.util.Map" resultType="com.scinan.iot.yunwa.dao.domain.Areas">
     	select t2.id as district_id,
     	t2.area_name as district,
     	t3.area_name as city,
     	t3.id as city_id,
     	t4.area_name as province,
     	t4.id as province_id
     	from t_areas_yajing t1 
		left join t_areas t2 
		on t1.area_id = t2.id 
		left join t_areas t3 
		on t2.parent_id = t3.id
		left join t_areas t4 
		on t3.parent_id = t4.id    
    </select>
    
    

    <select id="fetchById" parameterType="java.lang.String" resultType="com.scinan.iot.yunwa.dao.domain.Areas">
        SELECT
        <include refid="sql_columns" />
        FROM t_areas t
        where
        t.id=#{id}
    </select>


    <select id="count" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT COUNT(1)  FROM t_areas t <include refid="sql_where" />
    </select>
    <delete id="delete" parameterType="java.lang.String">
        delete from t_areas where id=#{id}
    </delete>

    <update id="update" parameterType="com.scinan.iot.yunwa.dao.domain.Areas">
		update t_areas
	    <set >
        	<if test="area_name != null" >
    	    		area_name = #{area_name},
		</if>
        	<if test="parent_id != null" >
    	    		parent_id = #{parent_id},
		</if>
        	<if test="short_name != null" >
    	    		short_name = #{short_name},
		</if>
        	<if test="lng != null" >
    	    		lng = #{lng},
		</if>
        	<if test="lat != null" >
    	    		lat = #{lat},
		</if>
        	<if test="level != null" >
    	    		level = #{level},
		</if>
        	<if test="position != null" >
    	    		position = #{position},
		</if>
        	<if test="sort != null" >
    	    		sort = #{sort},
		</if>
    	    </set>
	    where id=#{id}
    </update>
    
    <select id="fetchCityAreasByProvinceId" parameterType="java.lang.String" resultType="com.scinan.iot.yunwa.dao.domain.Areas">
        select distinct t3.area_name,t3.id from t_areas_yajing t1 
		left join t_areas t2 
		on t1.area_id = t2.id 
		left join t_areas t3 
		on t2.parent_id = t3.id
		left join t_areas t4 on t3.parent_id = t4.id  where t4.id = #{id}
    </select>
    
     <select id="fetchDistrictAreasByProvinceId" parameterType="java.lang.String" resultType="com.scinan.iot.yunwa.dao.domain.Areas">
        select t2.id,t2.area_name from t_areas_yajing t1 
		left join t_areas t2 
		on t1.area_id = t2.id 
		left join t_areas t3 
		on t2.parent_id = t3.id
		left join t_areas t4 on t3.parent_id = t4.id  where t4.id = #{id}
    </select>
    
    <select id="fetchDistrictAreasByCityId" parameterType="java.lang.String" resultType="com.scinan.iot.yunwa.dao.domain.Areas">
        select t2.id,t2.area_name from t_areas_yajing t1 
		left join t_areas t2 
		on t1.area_id = t2.id 
		left join t_areas t3 
		on t2.parent_id = t3.id
		left join t_areas t4 on t3.parent_id = t4.id  where t3.id = #{id}
    </select>
    
     <select id="fetchProvinceList"  resultType="com.scinan.iot.yunwa.dao.domain.Areas">
        select id,area_name from t_areas t1 where level = 1 order by sort asc
    </select>
    <select id="fetchCityList" parameterType="java.lang.String" resultType="com.scinan.iot.yunwa.dao.domain.Areas">
        select id,area_name from t_areas t1 where level = 2 and parent_id=#{parent_id}  order by sort asc
    </select>
    <select id="fetchAreaList" parameterType="java.lang.String" resultType="com.scinan.iot.yunwa.dao.domain.Areas">
        select id,area_name from t_areas t1 where level = 3 and parent_id=#{parent_id}  order by sort asc
    </select>
    <select id="fetchAreaNameOfList"  resultType="com.scinan.iot.yunwa.dao.domain.Areas">
         SELECT id,area_name FROM t_areas where parent_id = '0' order by sort asc
    </select>
    
    <select id="fetchAreasByParent_id" parameterType="java.lang.String" resultType="com.scinan.iot.yunwa.dao.domain.Areas">
    	select id,area_name from t_areas where parent_id = #{parent_id} order by sort asc
    </select>
</mapper>